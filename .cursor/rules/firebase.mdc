---
description: バックエンドの実装に関するガイド．n8n, Firebase Firestore, Storage
alwaysApply: false
---
# 🔥 Firebase設定

このプロジェクトでのFirebase利用方針とn8n連携について説明します。

## Firebase サービス利用

- **データの永続化**: Firebase Firestore
- **ファイルのアップロード・保存**: Firebase Storage

## Firebase関連ドキュメント参照
- **Firebase関連**: チャットで `@Docs Firebase` と入力してFirebaseの公式ドキュメントを参照

## 実装ポイント
- **クライアントサイド実装**: クライアントサイドのみで実装
- **Firebase SDK**: Firebase SDKの最新の書き方を@Docsで確認してから実装
- **n8n連携**: Firebaseの設定とn8nのWebhookを組み合わせたバックエンド機能の実装

## 使用方法
このルールは、データの永続化やファイルの取り扱い機能が必要になった時に、チャットで `@firebase` と入力して参照してください。通常の開発では自動的に適用されません。

## n8n Webhook設定

カスタムロジックが必要な場合は、n8nのWebhookを利用します。

### デフォルトWebhook URL
```
https://yn8n.app.n8n.cloud/webhook/1d79e9e9-92e4-4a24-b0dd-b696767319a5
```

プロンプトで別途URLが指定された場合は、そちらを使用してください。

## セットアップ手順

1. **Firebase プロジェクト作成**
   - Firebase Consoleでプロジェクトを作成
   - Firestore, Storageを有効化

2. **Firebase設定ファイル**
   ```typescript
   // src/lib/firebase.ts
   import { initializeApp } from 'firebase/app'
   import { getFirestore } from 'firebase/firestore'
   import { getStorage } from 'firebase/storage'

   const firebaseConfig = {
     // 設定情報
   }

   const app = initializeApp(firebaseConfig)
   export const db = getFirestore(app)
   export const storage = getStorage(app)
   ```

3. **環境変数設定**
   `.env.local` ファイルでFirebaseの設定情報を管理